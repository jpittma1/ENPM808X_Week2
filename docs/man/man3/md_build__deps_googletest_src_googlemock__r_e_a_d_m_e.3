.TH "md_build__deps_googletest_src_googlemock__r_e_a_d_m_e" 3 "Tue Sep 12 2023" "Week2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_build__deps_googletest_src_googlemock__r_e_a_d_m_e \- Googletest Mocking (gMock) Framework 

.SS "Overview"
Google's framework for writing and using C++ mock classes\&. It can help you derive better designs of your system and write better tests\&.
.PP
It is inspired by:
.PP
.IP "\(bu" 2
\fCjMock\fP
.IP "\(bu" 2
\fCEasyMock\fP
.IP "\(bu" 2
\fCHamcrest\fP
.PP
.PP
It is designed with C++'s specifics in mind\&.
.PP
gMock:
.PP
.IP "\(bu" 2
Provides a declarative syntax for defining mocks\&.
.IP "\(bu" 2
Can define partial (hybrid) mocks, which are a cross of real and mock objects\&.
.IP "\(bu" 2
Handles functions of arbitrary types and overloaded functions\&.
.IP "\(bu" 2
Comes with a rich set of matchers for validating function arguments\&.
.IP "\(bu" 2
Uses an intuitive syntax for controlling the behavior of a mock\&.
.IP "\(bu" 2
Does automatic verification of expectations (no record-and-replay needed)\&.
.IP "\(bu" 2
Allows arbitrary (partial) ordering constraints on function calls to be expressed\&.
.IP "\(bu" 2
Lets a user extend it by defining new matchers and actions\&.
.IP "\(bu" 2
Does not use exceptions\&.
.IP "\(bu" 2
Is easy to learn and use\&.
.PP
.PP
Details and examples can be found here:
.PP
.IP "\(bu" 2
\fCgMock for Dummies\fP
.IP "\(bu" 2
\fCLegacy gMock FAQ\fP
.IP "\(bu" 2
\fCgMock Cookbook\fP
.IP "\(bu" 2
\fCgMock Cheat Sheet\fP
.PP
.PP
GoogleMock is a part of \fCGoogleTest C++ testing framework\fP and a subject to the same requirements\&. 
