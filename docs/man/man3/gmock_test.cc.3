.TH "build/_deps/googletest-src/googlemock/test/gmock_test.cc" 3 "Tue Sep 12 2023" "Week2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
build/_deps/googletest-src/googlemock/test/gmock_test.cc
.SH SYNOPSIS
.br
.PP
\fC#include 'gmock/gmock\&.h'\fP
.br
\fC#include <string>\fP
.br
\fC#include 'gtest/gtest\&.h'\fP
.br
\fC#include 'gtest/internal/custom/gtest\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename Char , int M, int N> void \fBTestInitGoogleMock\fP (const Char *(&argv)[M], const Char *(&new_argv)[N], const ::std::string &expected_gmock_verbose)"
.br
.ti -1c
.RI "\fBTEST\fP (InitGoogleMockTest, ParsesInvalidCommandLine)"
.br
.ti -1c
.RI "\fBTEST\fP (InitGoogleMockTest, ParsesEmptyCommandLine)"
.br
.ti -1c
.RI "\fBTEST\fP (InitGoogleMockTest, ParsesSingleFlag)"
.br
.ti -1c
.RI "\fBTEST\fP (InitGoogleMockTest, ParsesMultipleFlags)"
.br
.ti -1c
.RI "\fBTEST\fP (InitGoogleMockTest, ParsesUnrecognizedFlag)"
.br
.ti -1c
.RI "\fBTEST\fP (InitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag)"
.br
.ti -1c
.RI "\fBTEST\fP (WideInitGoogleMockTest, ParsesInvalidCommandLine)"
.br
.ti -1c
.RI "\fBTEST\fP (WideInitGoogleMockTest, ParsesEmptyCommandLine)"
.br
.ti -1c
.RI "\fBTEST\fP (WideInitGoogleMockTest, ParsesSingleFlag)"
.br
.ti -1c
.RI "\fBTEST\fP (WideInitGoogleMockTest, ParsesMultipleFlags)"
.br
.ti -1c
.RI "\fBTEST\fP (WideInitGoogleMockTest, ParsesUnrecognizedFlag)"
.br
.ti -1c
.RI "\fBTEST\fP (WideInitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag)"
.br
.ti -1c
.RI "\fBTEST\fP (FlagTest, IsAccessibleInCode)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "TEST (FlagTest, IsAccessibleInCode)"

.PP
Definition at line 175 of file gmock_test\&.cc\&.
.SS "TEST (InitGoogleMockTest, ParsesEmptyCommandLine)"

.PP
Definition at line 72 of file gmock_test\&.cc\&.
.SS "TEST (InitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag)"

.PP
Definition at line 109 of file gmock_test\&.cc\&.
.SS "TEST (InitGoogleMockTest, ParsesInvalidCommandLine)"

.PP
Definition at line 64 of file gmock_test\&.cc\&.
.SS "TEST (InitGoogleMockTest, ParsesMultipleFlags)"

.PP
Definition at line 88 of file gmock_test\&.cc\&.
.SS "TEST (InitGoogleMockTest, ParsesSingleFlag)"

.PP
Definition at line 80 of file gmock_test\&.cc\&.
.SS "TEST (InitGoogleMockTest, ParsesUnrecognizedFlag)"

.PP
Definition at line 101 of file gmock_test\&.cc\&.
.SS "TEST (WideInitGoogleMockTest, ParsesEmptyCommandLine)"

.PP
Definition at line 126 of file gmock_test\&.cc\&.
.SS "TEST (WideInitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag)"

.PP
Definition at line 163 of file gmock_test\&.cc\&.
.SS "TEST (WideInitGoogleMockTest, ParsesInvalidCommandLine)"

.PP
Definition at line 118 of file gmock_test\&.cc\&.
.SS "TEST (WideInitGoogleMockTest, ParsesMultipleFlags)"

.PP
Definition at line 142 of file gmock_test\&.cc\&.
.SS "TEST (WideInitGoogleMockTest, ParsesSingleFlag)"

.PP
Definition at line 134 of file gmock_test\&.cc\&.
.SS "TEST (WideInitGoogleMockTest, ParsesUnrecognizedFlag)"

.PP
Definition at line 155 of file gmock_test\&.cc\&.
.SS "template<typename Char , int M, int N> void TestInitGoogleMock (const Char *(&) argv[M], const Char *(&) new_argv[N], const ::std::string & expected_gmock_verbose)"

.PP
Definition at line 48 of file gmock_test\&.cc\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Week2 from the source code\&.
