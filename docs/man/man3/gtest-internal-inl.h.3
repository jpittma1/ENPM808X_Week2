.TH "build/_deps/googletest-src/googletest/src/gtest-internal-inl.h" 3 "Tue Sep 12 2023" "Week2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
build/_deps/googletest-src/googletest/src/gtest-internal-inl.h
.SH SYNOPSIS
.br
.PP
\fC#include <errno\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <algorithm>\fP
.br
\fC#include <cstdint>\fP
.br
\fC#include <memory>\fP
.br
\fC#include <set>\fP
.br
\fC#include <string>\fP
.br
\fC#include <vector>\fP
.br
\fC#include 'gtest/internal/gtest\-port\&.h'\fP
.br
\fC#include 'gtest/gtest\-spi\&.h'\fP
.br
\fC#include 'gtest/gtest\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBtesting::internal::GTestFlagSaver\fP"
.br
.ti -1c
.RI "class \fBtesting::internal::TestPropertyKeyIs\fP"
.br
.ti -1c
.RI "class \fBtesting::internal::UnitTestOptions\fP"
.br
.ti -1c
.RI "class \fBtesting::internal::OsStackTraceGetterInterface\fP"
.br
.ti -1c
.RI "class \fBtesting::internal::OsStackTraceGetter\fP"
.br
.ti -1c
.RI "struct \fBtesting::internal::TraceInfo\fP"
.br
.ti -1c
.RI "class \fBtesting::internal::DefaultGlobalTestPartResultReporter\fP"
.br
.ti -1c
.RI "class \fBtesting::internal::DefaultPerThreadTestPartResultReporter\fP"
.br
.ti -1c
.RI "class \fBtesting::internal::UnitTestImpl\fP"
.br
.ti -1c
.RI "class \fBtesting::internal::TestResultAccessor\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBtesting\fP"
.br
.ti -1c
.RI " \fBtesting::internal\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBGTEST_DISABLE_MSC_WARNINGS_PUSH_\fP (4251) \fBGTEST_DECLARE_bool_\fP(death_test_use_fork)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP TimeInMillis \fBtesting::internal::GetTimeInMillis\fP ()"
.br
.ti -1c
.RI "\fBGTEST_API_\fP bool \fBtesting::internal::ShouldUseColor\fP (bool stdout_is_tty)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP std::string \fBtesting::internal::FormatTimeInMillisAsSeconds\fP (TimeInMillis ms)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP std::string \fBtesting::internal::FormatEpochTimeInMillisAsIso8601\fP (TimeInMillis ms)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP bool \fBtesting::internal::ParseFlag\fP (const char *str, const char *flag, int32_t *\fBvalue\fP)"
.br
.ti -1c
.RI "int \fBtesting::internal::GetRandomSeedFromFlag\fP (int32_t random_seed_flag)"
.br
.ti -1c
.RI "int \fBtesting::internal::GetNextRandomSeed\fP (int seed)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP std::string \fBtesting::internal::CodePointToUtf8\fP (uint32_t code_point)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP std::string \fBtesting::internal::WideStringToUtf8\fP (const wchar_t *str, int num_chars)"
.br
.ti -1c
.RI "void \fBtesting::internal::WriteToShardStatusFileIfNeeded\fP ()"
.br
.ti -1c
.RI "\fBGTEST_API_\fP bool \fBtesting::internal::ShouldShard\fP (const char *total_shards_str, const char *shard_index_str, bool in_subprocess_for_death_test)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP int32_t \fBtesting::internal::Int32FromEnvOrDie\fP (const char *env_var, int32_t default_val)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP bool \fBtesting::internal::ShouldRunTestOnShard\fP (int total_shards, int shard_index, int test_id)"
.br
.ti -1c
.RI "template<class Container , typename Predicate > int \fBtesting::internal::CountIf\fP (const Container &c, Predicate predicate)"
.br
.ti -1c
.RI "template<class Container , typename Functor > void \fBtesting::internal::ForEach\fP (const Container &c, Functor functor)"
.br
.ti -1c
.RI "template<typename E > E \fBtesting::internal::GetElementOr\fP (const std::vector< E > &v, int \fBi\fP, E default_value)"
.br
.ti -1c
.RI "template<typename E > void \fBtesting::internal::ShuffleRange\fP (internal::Random *random, int begin, int end, std::vector< E > *v)"
.br
.ti -1c
.RI "template<typename E > void \fBtesting::internal::Shuffle\fP (internal::Random *random, std::vector< E > *v)"
.br
.ti -1c
.RI "class UnitTestImpl * \fBtesting::internal::GetUnitTestImpl\fP ()"
.br
.ti -1c
.RI "\fBGTEST_API_\fP void \fBtesting::internal::ParseGoogleTestFlagsOnly\fP (int *argc, char **argv)"
.br
.ti -1c
.RI "\fBGTEST_API_\fP void \fBtesting::internal::ParseGoogleTestFlagsOnly\fP (int *argc, wchar_t **argv)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBGTEST_API_\fP const TypeId \fBtesting::internal::kTestTypeIdInGoogleTest\fP = GetTestTypeId()"
.br
.ti -1c
.RI "const int \fBtesting::internal::kMaxRandomSeed\fP = 99999"
.br
.ti -1c
.RI "\fBGTEST_API_\fP bool \fBtesting::internal::g_help_flag\fP = false"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "GTEST_DISABLE_MSC_WARNINGS_PUSH_ (4251 GMOCK_MAYBE_5046_)"

.PP
Definition at line 50 of file gmock\-cardinalities\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Week2 from the source code\&.
