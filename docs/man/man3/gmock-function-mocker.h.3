.TH "build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h" 3 "Tue Sep 12 2023" "Week2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
build/_deps/googletest-src/googlemock/include/gmock/gmock-function-mocker.h
.SH SYNOPSIS
.br
.PP
\fC#include <type_traits>\fP
.br
\fC#include <utility>\fP
.br
\fC#include 'gmock/gmock\-spec\-builders\&.h'\fP
.br
\fC#include 'gmock/internal/gmock\-internal\-utils\&.h'\fP
.br
\fC#include 'gmock/internal/gmock\-pp\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBtesting::internal::ThisRefAdjuster< Pattern >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBtesting\fP"
.br
.ti -1c
.RI " \fBtesting::internal\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMOCK_METHOD\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_1\fP(\&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_2\fP(\&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_3\fP(_Ret,  _MethodName,  _Args)     \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_4\fP(_Ret, _MethodName, _Args, ())"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_4\fP(_Ret,  _MethodName,  _Args,  _Spec)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_5\fP(\&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_6\fP(\&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_7\fP(\&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_WRONG_ARITY\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_ASSERT_PARENTHESIS\fP(_Tuple)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_ASSERT_VALID_SIGNATURE\fP(_N, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_ASSERT_VALID_SPEC\fP(_Spec)     \fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT\fP, ~, _Spec)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHOD_IMPL\fP(_N,  _MethodName,  _Constness,  _Override,  _Final,  _NoexceptSpec,  _CallType,  _RefSpec,  _Signature)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_EXPAND\fP(\&.\&.\&.)   __VA_ARGS__"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_HAS_CONST\fP(_Tuple)     \fBGMOCK_PP_HAS_COMMA\fP(\fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_DETECT_CONST\fP, ~, _Tuple))"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_HAS_OVERRIDE\fP(_Tuple)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_HAS_FINAL\fP(_Tuple)     \fBGMOCK_PP_HAS_COMMA\fP(\fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_DETECT_FINAL\fP, ~, _Tuple))"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_GET_NOEXCEPT_SPEC\fP(_Tuple)     \fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT\fP, ~, _Tuple)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT\fP(_i,  _,  _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_GET_CALLTYPE_SPEC\fP(_Tuple)     \fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE\fP, ~, _Tuple)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE\fP(_i,  _,  _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_GET_REF_SPEC\fP(_Tuple)     \fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_REF_SPEC_IF_REF\fP, ~, _Tuple)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_REF_SPEC_IF_REF\fP(_i,  _,  _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT\fP(_i,  _,  _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_CONST\fP(_i,  _,  _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_CONST_I_, _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_CONST_I_const\fP   ,"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_OVERRIDE\fP(_i,  _,  _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_OVERRIDE_I_, _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_OVERRIDE_I_override\fP   ,"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_FINAL\fP(_i,  _,  _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_FINAL_I_, _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_FINAL_I_final\fP   ,"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_NOEXCEPT\fP(_i,  _,  _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_NOEXCEPT_I_, _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_NOEXCEPT_I_noexcept\fP   ,"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_REF\fP(_i,  _,  _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_REF_I_, _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_REF_I_ref\fP   ,"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_UNPACK_ref\fP(\fBx\fP)   \fBx\fP"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_CALLTYPE\fP(_i,  _,  _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_CALLTYPE_I_, _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_DETECT_CALLTYPE_I_Calltype\fP   ,"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_UNPACK_Calltype\fP(\&.\&.\&.)   __VA_ARGS__"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_SIGNATURE\fP(_Ret,  _Args)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_GET_TYPE\fP(_i,  _,  _elem)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_PARAMETER\fP(_i,  _Signature,  _)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_FORWARD_ARG\fP(_i,  _Signature,  _)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MATCHER_PARAMETER\fP(_i,  _Signature,  _)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MATCHER_ARGUMENT\fP(_i,  _1,  _2)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_A_MATCHER_ARGUMENT\fP(_i,  _Signature,  _)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_ARG_O\fP(_i, \&.\&.\&.)     typename ::\fBtesting::internal::Function\fP<__VA_ARGS__>::template Arg<_i>::type"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MATCHER_O\fP(_i, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD0\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 0, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD1\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 1, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD2\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 2, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD3\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 3, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD4\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 4, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD5\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 5, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD6\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 6, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD7\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 7, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD8\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 8, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD9\fP(m, \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 9, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD10\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 10, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD0\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 0, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD1\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 1, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD2\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 2, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD3\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 3, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD4\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 4, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD5\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 5, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD6\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 6, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD7\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 7, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD8\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 8, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD9\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 9, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD10\fP(m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 10, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD0_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD0\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD1_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD1\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD2_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD2\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD3_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD3\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD4_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD4\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD5_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD5\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD6_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD6\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD7_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD7\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD8_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD8\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD9_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD9\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD10_T\fP(m, \&.\&.\&.)   \fBMOCK_METHOD10\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD0_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD0\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD1_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD1\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD2_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD2\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD3_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD3\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD4_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD4\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD5_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD5\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD6_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD6\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD7_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD7\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD8_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD8\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD9_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD9\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD10_T\fP(m, \&.\&.\&.)   \fBMOCK_CONST_METHOD10\fP(m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD0_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 0, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD1_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 1, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD2_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 2, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD3_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 3, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD4_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 4, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD5_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 5, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD6_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 6, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD7_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 7, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD8_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 8, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD9_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 9, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD10_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 10, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD0_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 0, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD1_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 1, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD2_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 2, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD3_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 3, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD4_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 4, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD5_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 5, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD6_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 6, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD7_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 7, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD8_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 8, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD9_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 9, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD10_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 10, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD0_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD0_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD1_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD1_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD2_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD2_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD3_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD3_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD4_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD4_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD5_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD5_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD6_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD6_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD7_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD7_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD8_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD8_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD9_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD9_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_METHOD10_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_METHOD10_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD0_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD0_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD1_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD1_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD2_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD2_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD3_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD3_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD4_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD4_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD5_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD5_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD6_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD6_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD7_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD7_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD8_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD8_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD9_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD9_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBMOCK_CONST_METHOD10_T_WITH_CALLTYPE\fP(ct,  m, \&.\&.\&.)     \fBMOCK_CONST_METHOD10_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBGMOCK_INTERNAL_MOCK_METHODN\fP(constness,  ct,  \fBMethod\fP,  args_num, \&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBGMOCK_MOCKER_\fP(arity,  constness,  \fBMethod\fP)     \fBGTEST_CONCAT_TOKEN_\fP(gmock##constness##arity##_##\fBMethod\fP##_, __LINE__)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "template<typename T > using \fBtesting::internal::identity_t\fP = T"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "constexpr bool \fBtesting::internal::PrefixOf\fP (const char *a, const char *b)"
.br
.ti -1c
.RI "template<int N, int M> constexpr bool \fBtesting::internal::StartsWith\fP (const char(&prefix)[N], const char(&str)[M])"
.br
.ti -1c
.RI "template<int N, int M> constexpr bool \fBtesting::internal::EndsWith\fP (const char(&suffix)[N], const char(&str)[M])"
.br
.ti -1c
.RI "template<int N, int M> constexpr bool \fBtesting::internal::Equals\fP (const char(&a)[N], const char(&b)[M])"
.br
.ti -1c
.RI "template<int N> constexpr bool \fBtesting::internal::ValidateSpec\fP (const char(&spec)[N])"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define GMOCK_INTERNAL_A_MATCHER_ARGUMENT(_i, _Signature, _)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_COMMA_IF(_i)                                      \
  ::testing::A<GMOCK_INTERNAL_ARG_O(_i, GMOCK_PP_REMOVE_PARENS(_Signature))>()
.fi
.PP
Definition at line 345 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_ARG_O(_i,  \&.\&.\&.)     typename ::\fBtesting::internal::Function\fP<__VA_ARGS__>::template Arg<_i>::type"

.PP
Definition at line 349 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_ASSERT_PARENTHESIS(_Tuple)"
\fBValue:\fP
.PP
.nf
  static_assert(                                  \
      GMOCK_PP_IS_ENCLOSED_PARENS(_Tuple),        \
      GMOCK_PP_STRINGIZE(_Tuple) " should be enclosed in parentheses\&.")
.fi
.PP
Definition at line 157 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(_N,  \&.\&.\&.)"
\fBValue:\fP
.PP
.nf
  static_assert(                                                       \
      std::is_function<__VA_ARGS__>::value,                            \
      "Signature must be a function type, maybe return type contains " \
      "unprotected comma\&.");                                           \
  static_assert(                                                       \
      ::testing::tuple_size<typename ::testing::internal::Function<    \
              __VA_ARGS__>::ArgumentTuple>::value == _N,               \
      "This method does not take " GMOCK_PP_STRINGIZE(                 \
          _N) " arguments\&. Parenthesize all types with unprotected commas\&.")
.fi
.PP
Definition at line 162 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_ASSERT_VALID_SPEC(_Spec)     \fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT\fP, ~, _Spec)"

.PP
Definition at line 173 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT(_i, _, _elem)"
\fBValue:\fP
.PP
.nf
  static_assert(                                                               \
      (GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CONST(_i, _, _elem)) +         \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_OVERRIDE(_i, _, _elem)) +      \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_FINAL(_i, _, _elem)) +         \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_NOEXCEPT(_i, _, _elem)) +      \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_REF(_i, _, _elem)) +           \
       GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CALLTYPE(_i, _, _elem))) == 1, \
      GMOCK_PP_STRINGIZE(                                                      \
          _elem) " cannot be recognized as a valid specification modifier\&.");
.fi
.PP
Definition at line 254 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE(_i, _, _elem)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_IF(                                                          \
      GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_CALLTYPE(_i, _, _elem)), \
      GMOCK_PP_CAT(GMOCK_INTERNAL_UNPACK_, _elem), )
.fi
.PP
Definition at line 234 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_CALLTYPE(_i, _, _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_CALLTYPE_I_, _elem)"

.PP
Definition at line 294 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_CALLTYPE_I_Calltype   ,"

.PP
Definition at line 297 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_CONST(_i, _, _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_CONST_I_, _elem)"

.PP
Definition at line 267 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_CONST_I_const   ,"

.PP
Definition at line 270 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_FINAL(_i, _, _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_FINAL_I_, _elem)"

.PP
Definition at line 277 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_FINAL_I_final   ,"

.PP
Definition at line 280 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_NOEXCEPT(_i, _, _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_NOEXCEPT_I_, _elem)"

.PP
Definition at line 282 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_NOEXCEPT_I_noexcept   ,"

.PP
Definition at line 285 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_OVERRIDE(_i, _, _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_OVERRIDE_I_, _elem)"

.PP
Definition at line 272 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_OVERRIDE_I_override   ,"

.PP
Definition at line 275 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_REF(_i, _, _elem)     \fBGMOCK_PP_CAT\fP(GMOCK_INTERNAL_DETECT_REF_I_, _elem)"

.PP
Definition at line 287 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_DETECT_REF_I_ref   ,"

.PP
Definition at line 290 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_EXPAND( \&.\&.\&.)   __VA_ARGS__"

.PP
Definition at line 210 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_FORWARD_ARG(_i, _Signature, _)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_COMMA_IF(_i)                               \
  ::std::forward<GMOCK_INTERNAL_ARG_O(                \
      _i, GMOCK_PP_REMOVE_PARENS(_Signature))>(gmock_a##_i)
.fi
.PP
Definition at line 331 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_GET_CALLTYPE_SPEC(_Tuple)     \fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE\fP, ~, _Tuple)"

.PP
Definition at line 231 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_GET_NOEXCEPT_SPEC(_Tuple)     \fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT\fP, ~, _Tuple)"

.PP
Definition at line 223 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_GET_REF_SPEC(_Tuple)     \fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_REF_SPEC_IF_REF\fP, ~, _Tuple)"

.PP
Definition at line 239 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_GET_TYPE(_i, _, _elem)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_COMMA_IF(_i)                                                \
  GMOCK_PP_IF(GMOCK_PP_IS_BEGIN_PARENS(_elem), GMOCK_PP_REMOVE_PARENS, \
              GMOCK_PP_IDENTITY)                                       \
  (_elem)
.fi
.PP
Definition at line 320 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_HAS_CONST(_Tuple)     \fBGMOCK_PP_HAS_COMMA\fP(\fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_DETECT_CONST\fP, ~, _Tuple))"

.PP
Definition at line 213 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_HAS_FINAL(_Tuple)     \fBGMOCK_PP_HAS_COMMA\fP(\fBGMOCK_PP_FOR_EACH\fP(\fBGMOCK_INTERNAL_DETECT_FINAL\fP, ~, _Tuple))"

.PP
Definition at line 220 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_HAS_OVERRIDE(_Tuple)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_HAS_COMMA(                       \
      GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_DETECT_OVERRIDE, ~, _Tuple))
.fi
.PP
Definition at line 216 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MATCHER_ARGUMENT(_i, _1, _2)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_COMMA_IF(_i)                             \
  gmock_a##_i
.fi
.PP
Definition at line 341 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MATCHER_O(_i,  \&.\&.\&.)"
\fBValue:\fP
.PP
.nf
  const ::testing::Matcher<typename ::testing::internal::Function< \
      __VA_ARGS__>::template Arg<_i>::type>&
.fi
.PP
Definition at line 352 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MATCHER_PARAMETER(_i, _Signature, _)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_COMMA_IF(_i)                                            \
  GMOCK_INTERNAL_MATCHER_O(_i, GMOCK_PP_REMOVE_PARENS(_Signature)) \
  gmock_a##_i
.fi
.PP
Definition at line 336 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHOD_ARG_1( \&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"

.PP
Definition at line 117 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHOD_ARG_2( \&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"

.PP
Definition at line 120 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHOD_ARG_3(_Ret, _MethodName, _Args)     \fBGMOCK_INTERNAL_MOCK_METHOD_ARG_4\fP(_Ret, _MethodName, _Args, ())"

.PP
Definition at line 123 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHOD_ARG_4(_Ret, _MethodName, _Args, _Spec)"
\fBValue:\fP
.PP
.nf
  GMOCK_INTERNAL_ASSERT_PARENTHESIS(_Args);                                \
  GMOCK_INTERNAL_ASSERT_PARENTHESIS(_Spec);                                \
  GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(                                   \
      GMOCK_PP_NARG0 _Args, GMOCK_INTERNAL_SIGNATURE(_Ret, _Args));        \
  GMOCK_INTERNAL_ASSERT_VALID_SPEC(_Spec)                                  \
  GMOCK_INTERNAL_MOCK_METHOD_IMPL(                                         \
      GMOCK_PP_NARG0 _Args, _MethodName, GMOCK_INTERNAL_HAS_CONST(_Spec),  \
      GMOCK_INTERNAL_HAS_OVERRIDE(_Spec), GMOCK_INTERNAL_HAS_FINAL(_Spec), \
      GMOCK_INTERNAL_GET_NOEXCEPT_SPEC(_Spec),                             \
      GMOCK_INTERNAL_GET_CALLTYPE_SPEC(_Spec),                             \
      GMOCK_INTERNAL_GET_REF_SPEC(_Spec),                                  \
      (GMOCK_INTERNAL_SIGNATURE(_Ret, _Args)))
.fi
.PP
Definition at line 126 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHOD_ARG_5( \&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"

.PP
Definition at line 140 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHOD_ARG_6( \&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"

.PP
Definition at line 143 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHOD_ARG_7( \&.\&.\&.)     \fBGMOCK_INTERNAL_WRONG_ARITY\fP(__VA_ARGS__)"

.PP
Definition at line 146 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHOD_IMPL(_N, _MethodName, _Constness, _Override, _Final, _NoexceptSpec, _CallType, _RefSpec, _Signature)"
\fBValue:\fP
.PP
.nf
  typename ::testing::internal::Function<GMOCK_PP_REMOVE_PARENS(               \
      _Signature)>::Result                                                     \
  GMOCK_INTERNAL_EXPAND(_CallType)                                             \
      _MethodName(GMOCK_PP_REPEAT(GMOCK_INTERNAL_PARAMETER, _Signature, _N))   \
          GMOCK_PP_IF(_Constness, const, )                                     \
              _RefSpec _NoexceptSpec GMOCK_PP_IF(_Override, override, )        \
                  GMOCK_PP_IF(_Final, final, ) {                               \
    GMOCK_MOCKER_(_N, _Constness, _MethodName)                                 \
        \&.SetOwnerAndName(this, #_MethodName);                                  \
    return GMOCK_MOCKER_(_N, _Constness, _MethodName)                          \
        \&.Invoke(GMOCK_PP_REPEAT(GMOCK_INTERNAL_FORWARD_ARG, _Signature, _N));  \
  }                                                                            \
  ::testing::MockSpec<GMOCK_PP_REMOVE_PARENS(_Signature)> gmock_##_MethodName( \
      GMOCK_PP_REPEAT(GMOCK_INTERNAL_MATCHER_PARAMETER, _Signature, _N))       \
      GMOCK_PP_IF(_Constness, const, ) _RefSpec {                              \
    GMOCK_MOCKER_(_N, _Constness, _MethodName)\&.RegisterOwner(this);            \
    return GMOCK_MOCKER_(_N, _Constness, _MethodName)                          \
        \&.With(GMOCK_PP_REPEAT(GMOCK_INTERNAL_MATCHER_ARGUMENT, , _N));         \
  }                                                                            \
  ::testing::MockSpec<GMOCK_PP_REMOVE_PARENS(_Signature)> gmock_##_MethodName( \
      const ::testing::internal::WithoutMatchers&,                             \
      GMOCK_PP_IF(_Constness, const, )::testing::internal::Function<           \
          GMOCK_PP_REMOVE_PARENS(_Signature)>*) const _RefSpec _NoexceptSpec { \
    return ::testing::internal::ThisRefAdjuster<GMOCK_PP_IF(                   \
        _Constness, const, ) int _RefSpec>::Adjust(*this)                      \
        \&.gmock_##_MethodName(GMOCK_PP_REPEAT(                                  \
            GMOCK_INTERNAL_A_MATCHER_ARGUMENT, _Signature, _N));               \
  }                                                                            \
  mutable ::testing::FunctionMocker<GMOCK_PP_REMOVE_PARENS(_Signature)>        \
  GMOCK_MOCKER_(_N, _Constness, _MethodName)
.fi
.PP
Definition at line 176 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_MOCK_METHODN(constness, ct, \fBMethod\fP, args_num,  \&.\&.\&.)"
\fBValue:\fP
.PP
.nf
  GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(                                  \
      args_num, ::testing::internal::identity_t<__VA_ARGS__>);            \
  GMOCK_INTERNAL_MOCK_METHOD_IMPL(                                        \
      args_num, Method, GMOCK_PP_NARG0(constness), 0, 0, , ct, ,          \
      (::testing::internal::identity_t<__VA_ARGS__>))
.fi
.PP
Definition at line 508 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT(_i, _, _elem)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_IF(                                                          \
      GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_NOEXCEPT(_i, _, _elem)), \
      _elem, )
.fi
.PP
Definition at line 226 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_PARAMETER(_i, _Signature, _)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_COMMA_IF(_i)                                        \
  GMOCK_INTERNAL_ARG_O(_i, GMOCK_PP_REMOVE_PARENS(_Signature)) \
  gmock_a##_i
.fi
.PP
Definition at line 326 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_REF_SPEC_IF_REF(_i, _, _elem)"
\fBValue:\fP
.PP
.nf
  GMOCK_PP_IF(GMOCK_PP_HAS_COMMA(GMOCK_INTERNAL_DETECT_REF(_i, _, _elem)), \
              GMOCK_PP_CAT(GMOCK_INTERNAL_UNPACK_, _elem), )
.fi
.PP
Definition at line 242 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_SIGNATURE(_Ret, _Args)"
\fBValue:\fP
.PP
.nf
  ::testing::internal::identity_t<GMOCK_PP_IF(GMOCK_PP_IS_BEGIN_PARENS(_Ret), \
                                              GMOCK_PP_REMOVE_PARENS,         \
                                              GMOCK_PP_IDENTITY)(_Ret)>(      \
      GMOCK_PP_FOR_EACH(GMOCK_INTERNAL_GET_TYPE, _, _Args))
.fi
.PP
Definition at line 314 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_UNPACK_Calltype( \&.\&.\&.)   __VA_ARGS__"

.PP
Definition at line 299 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_UNPACK_ref(\fBx\fP)   \fBx\fP"

.PP
Definition at line 292 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_INTERNAL_WRONG_ARITY( \&.\&.\&.)"
\fBValue:\fP
.PP
.nf
  static_assert(                                                             \
      false,                                                                 \
      "MOCK_METHOD must be called with 3 or 4 arguments\&. _Ret, "             \
      "_MethodName, _Args and optionally _Spec\&. _Args and _Spec must be "    \
      "enclosed in parentheses\&. If _Ret is a type with unprotected commas, " \
      "it must also be enclosed in parentheses\&.")
.fi
.PP
Definition at line 149 of file gmock\-function\-mocker\&.h\&.
.SS "#define GMOCK_MOCKER_(arity, constness, \fBMethod\fP)     \fBGTEST_CONCAT_TOKEN_\fP(gmock##constness##arity##_##\fBMethod\fP##_, __LINE__)"

.PP
Definition at line 515 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD0(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 0, __VA_ARGS__)"

.PP
Definition at line 369 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD0_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD0\fP(m, __VA_ARGS__)"

.PP
Definition at line 404 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD0_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD0_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 485 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD0_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 0, __VA_ARGS__)"

.PP
Definition at line 439 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD1(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 1, __VA_ARGS__)"

.PP
Definition at line 371 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD10(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 10, __VA_ARGS__)"

.PP
Definition at line 389 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD10_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD10\fP(m, __VA_ARGS__)"

.PP
Definition at line 414 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD10_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD10_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 505 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD10_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 10, __VA_ARGS__)"

.PP
Definition at line 459 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD1_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD1\fP(m, __VA_ARGS__)"

.PP
Definition at line 405 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD1_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD1_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 487 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD1_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 1, __VA_ARGS__)"

.PP
Definition at line 441 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD2(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 2, __VA_ARGS__)"

.PP
Definition at line 373 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD2_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD2\fP(m, __VA_ARGS__)"

.PP
Definition at line 406 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD2_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD2_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 489 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD2_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 2, __VA_ARGS__)"

.PP
Definition at line 443 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD3(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 3, __VA_ARGS__)"

.PP
Definition at line 375 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD3_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD3\fP(m, __VA_ARGS__)"

.PP
Definition at line 407 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD3_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD3_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 491 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD3_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 3, __VA_ARGS__)"

.PP
Definition at line 445 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD4(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 4, __VA_ARGS__)"

.PP
Definition at line 377 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD4_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD4\fP(m, __VA_ARGS__)"

.PP
Definition at line 408 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD4_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD4_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 493 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD4_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 4, __VA_ARGS__)"

.PP
Definition at line 447 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD5(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 5, __VA_ARGS__)"

.PP
Definition at line 379 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD5_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD5\fP(m, __VA_ARGS__)"

.PP
Definition at line 409 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD5_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD5_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 495 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD5_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 5, __VA_ARGS__)"

.PP
Definition at line 449 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD6(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 6, __VA_ARGS__)"

.PP
Definition at line 381 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD6_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD6\fP(m, __VA_ARGS__)"

.PP
Definition at line 410 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD6_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD6_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 497 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD6_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 6, __VA_ARGS__)"

.PP
Definition at line 451 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD7(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 7, __VA_ARGS__)"

.PP
Definition at line 383 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD7_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD7\fP(m, __VA_ARGS__)"

.PP
Definition at line 411 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD7_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD7_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 499 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD7_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 7, __VA_ARGS__)"

.PP
Definition at line 453 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD8(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 8, __VA_ARGS__)"

.PP
Definition at line 385 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD8_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD8\fP(m, __VA_ARGS__)"

.PP
Definition at line 412 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD8_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD8_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 501 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD8_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 8, __VA_ARGS__)"

.PP
Definition at line 455 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD9(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, , m, 9, __VA_ARGS__)"

.PP
Definition at line 387 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD9_T(m,  \&.\&.\&.)   \fBMOCK_CONST_METHOD9\fP(m, __VA_ARGS__)"

.PP
Definition at line 413 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD9_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_CONST_METHOD9_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 503 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_CONST_METHOD9_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(const, ct, m, 9, __VA_ARGS__)"

.PP
Definition at line 457 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD( \&.\&.\&.)"
\fBValue:\fP
.PP
.nf
  GMOCK_INTERNAL_WARNING_PUSH()                                        \
  GMOCK_INTERNAL_WARNING_CLANG(ignored, "-Wunused-member-function")    \
  GMOCK_PP_VARIADIC_CALL(GMOCK_INTERNAL_MOCK_METHOD_ARG_, __VA_ARGS__) \
  GMOCK_INTERNAL_WARNING_POP()
.fi
.PP
Definition at line 111 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD0(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 0, __VA_ARGS__)"

.PP
Definition at line 356 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD0_T(m,  \&.\&.\&.)   \fBMOCK_METHOD0\fP(m, __VA_ARGS__)"

.PP
Definition at line 392 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD0_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD0_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 462 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD0_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 0, __VA_ARGS__)"

.PP
Definition at line 416 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD1(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 1, __VA_ARGS__)"

.PP
Definition at line 357 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD10(m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 10, __VA_ARGS__)"

.PP
Definition at line 366 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD10_T(m,  \&.\&.\&.)   \fBMOCK_METHOD10\fP(m, __VA_ARGS__)"

.PP
Definition at line 402 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD10_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD10_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 482 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD10_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 10, __VA_ARGS__)"

.PP
Definition at line 436 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD1_T(m,  \&.\&.\&.)   \fBMOCK_METHOD1\fP(m, __VA_ARGS__)"

.PP
Definition at line 393 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD1_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD1_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 464 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD1_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 1, __VA_ARGS__)"

.PP
Definition at line 418 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD2(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 2, __VA_ARGS__)"

.PP
Definition at line 358 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD2_T(m,  \&.\&.\&.)   \fBMOCK_METHOD2\fP(m, __VA_ARGS__)"

.PP
Definition at line 394 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD2_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD2_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 466 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD2_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 2, __VA_ARGS__)"

.PP
Definition at line 420 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD3(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 3, __VA_ARGS__)"

.PP
Definition at line 359 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD3_T(m,  \&.\&.\&.)   \fBMOCK_METHOD3\fP(m, __VA_ARGS__)"

.PP
Definition at line 395 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD3_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD3_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 468 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD3_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 3, __VA_ARGS__)"

.PP
Definition at line 422 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD4(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 4, __VA_ARGS__)"

.PP
Definition at line 360 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD4_T(m,  \&.\&.\&.)   \fBMOCK_METHOD4\fP(m, __VA_ARGS__)"

.PP
Definition at line 396 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD4_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD4_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 470 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD4_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 4, __VA_ARGS__)"

.PP
Definition at line 424 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD5(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 5, __VA_ARGS__)"

.PP
Definition at line 361 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD5_T(m,  \&.\&.\&.)   \fBMOCK_METHOD5\fP(m, __VA_ARGS__)"

.PP
Definition at line 397 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD5_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD5_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 472 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD5_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 5, __VA_ARGS__)"

.PP
Definition at line 426 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD6(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 6, __VA_ARGS__)"

.PP
Definition at line 362 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD6_T(m,  \&.\&.\&.)   \fBMOCK_METHOD6\fP(m, __VA_ARGS__)"

.PP
Definition at line 398 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD6_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD6_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 474 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD6_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 6, __VA_ARGS__)"

.PP
Definition at line 428 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD7(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 7, __VA_ARGS__)"

.PP
Definition at line 363 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD7_T(m,  \&.\&.\&.)   \fBMOCK_METHOD7\fP(m, __VA_ARGS__)"

.PP
Definition at line 399 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD7_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD7_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 476 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD7_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 7, __VA_ARGS__)"

.PP
Definition at line 430 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD8(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 8, __VA_ARGS__)"

.PP
Definition at line 364 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD8_T(m,  \&.\&.\&.)   \fBMOCK_METHOD8\fP(m, __VA_ARGS__)"

.PP
Definition at line 400 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD8_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD8_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 478 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD8_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 8, __VA_ARGS__)"

.PP
Definition at line 432 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD9(m,  \&.\&.\&.)   \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, , m, 9, __VA_ARGS__)"

.PP
Definition at line 365 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD9_T(m,  \&.\&.\&.)   \fBMOCK_METHOD9\fP(m, __VA_ARGS__)"

.PP
Definition at line 401 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD9_T_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBMOCK_METHOD9_WITH_CALLTYPE\fP(ct, m, __VA_ARGS__)"

.PP
Definition at line 480 of file gmock\-function\-mocker\&.h\&.
.SS "#define MOCK_METHOD9_WITH_CALLTYPE(ct, m,  \&.\&.\&.)     \fBGMOCK_INTERNAL_MOCK_METHODN\fP(, ct, m, 9, __VA_ARGS__)"

.PP
Definition at line 434 of file gmock\-function\-mocker\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Week2 from the source code\&.
