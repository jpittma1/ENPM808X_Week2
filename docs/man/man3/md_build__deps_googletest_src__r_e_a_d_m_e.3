.TH "md_build__deps_googletest_src__r_e_a_d_m_e" 3 "Tue Sep 12 2023" "Week2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_build__deps_googletest_src__r_e_a_d_m_e \- GoogleTest 

.SS "Announcements"
.SS "Live at Head"
GoogleTest now follows the \fCAbseil Live at Head philosophy\fP\&. We recommend \fCupdating to the latest commit in the \fCmain\fP branch as often as possible\fP\&. We do publish occasional semantic versions, tagged with \fCv${major}\&.${minor}\&.${patch}\fP (e\&.g\&. \fCv1\&.13\&.0\fP)\&.
.SS "Documentation Updates"
Our documentation is now live on GitHub Pages at https://google.github.io/googletest/\&. We recommend browsing the documentation on GitHub Pages rather than directly in the repository\&.
.SS "Release 1\&.13\&.0"
\fCRelease 1\&.13\&.0\fP is now available\&.
.PP
The 1\&.13\&.x branch requires at least C++14\&.
.SS "Continuous Integration"
We use Google's internal systems for continuous integration\&. \\ GitHub Actions were added for the convenience of open-source contributors\&. They are exclusively maintained by the open-source community and not used by the GoogleTest team\&.
.SS "Coming Soon"
.IP "\(bu" 2
We are planning to take a dependency on \fCAbseil\fP\&.
.IP "\(bu" 2
More documentation improvements are planned\&.
.PP
.SH "Welcome to <strong>GoogleTest</strong>, Google's C++ test framework!"
.PP
This repository is a merger of the formerly separate GoogleTest and GoogleMock projects\&. These were so closely related that it makes sense to maintain and release them together\&.
.SS "Getting Started"
See the \fCGoogleTest User's Guide\fP for documentation\&. We recommend starting with the \fCGoogleTest Primer\fP\&.
.PP
More information about building GoogleTest can be found at \fBgoogletest/README\&.md\fP\&.
.SH "Features"
.PP
.IP "\(bu" 2
xUnit test framework: \\ Googletest is based on the \fCxUnit\fP testing framework, a popular architecture for unit testing
.IP "\(bu" 2
Test discovery: \\ Googletest automatically discovers and runs your tests, eliminating the need to manually register your tests
.IP "\(bu" 2
Rich set of assertions: \\ Googletest provides a variety of assertions, such as equality, inequality, exceptions, and more, making it easy to test your code
.IP "\(bu" 2
User-defined assertions: \\ You can define your own assertions with Googletest, making it simple to write tests that are specific to your code
.IP "\(bu" 2
Death tests: \\ Googletest supports death tests, which verify that your code exits in a certain way, making it useful for testing error-handling code
.IP "\(bu" 2
Fatal and non-fatal failures: \\ You can specify whether a test failure should be treated as fatal or non-fatal with Googletest, allowing tests to continue running even if a failure occurs
.IP "\(bu" 2
Value-parameterized tests: \\ Googletest supports value-parameterized tests, which run multiple times with different input values, making it useful for testing functions that take different inputs
.IP "\(bu" 2
Type-parameterized tests: \\ Googletest also supports type-parameterized tests, which run with different data types, making it useful for testing functions that work with different data types
.IP "\(bu" 2
Various options for running tests: \\ Googletest provides many options for running tests including running individual tests, running tests in a specific order and running tests in parallel
.PP
.SH "Supported Platforms"
.PP
GoogleTest follows Google's \fCFoundational C++ Support Policy\fP\&. See \fCthis table\fP for a list of currently supported versions of compilers, platforms, and build tools\&.
.SH "Who Is Using GoogleTest?"
.PP
In addition to many internal projects at Google, GoogleTest is also used by the following notable projects:
.PP
.IP "\(bu" 2
The \fCChromium projects\fP (behind the Chrome browser and Chrome OS)\&.
.IP "\(bu" 2
The \fCLLVM\fP compiler\&.
.IP "\(bu" 2
\fCProtocol Buffers\fP, Google's data interchange format\&.
.IP "\(bu" 2
The \fCOpenCV\fP computer vision library\&.
.PP
.SH "Related Open Source Projects"
.PP
\fCGTest Runner\fP is a Qt5 based automated test-runner and Graphical User \fBInterface\fP with powerful features for Windows and Linux platforms\&.
.PP
\fCGoogleTest UI\fP is a test runner that runs your test binary, allows you to track its progress via a progress bar, and displays a list of test failures\&. Clicking on one shows failure text\&. GoogleTest UI is written in C#\&.
.PP
\fCGTest TAP Listener\fP is an event listener for GoogleTest that implements the \fCTAP protocol\fP for test result output\&. If your test runner understands TAP, you may find it useful\&.
.PP
\fCgtest-parallel\fP is a test runner that runs tests from your binary in parallel to provide significant speed-up\&.
.PP
\fCGoogleTest Adapter\fP is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests\&.
.PP
\fCC++ TestMate\fP is a VS Code extension allowing to view GoogleTest in a tree view and run/debug your tests\&.
.PP
\fCCornichon\fP is a small Gherkin DSL parser that generates stub code for GoogleTest\&.
.SH "Contributing Changes"
.PP
Please read \fC\fCCONTRIBUTING\&.md\fP\fP for details on how to contribute to this project\&.
.PP
Happy testing! 
